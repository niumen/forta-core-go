syntax = "proto3";

package network.forta;

import public "agent.proto";

option go_package = "./;protocol";

service PublisherNode {
  rpc Notify (NotifyRequest) returns (NotifyResponse) {}
}

message AlertResponse {
  repeated SignedAlert alerts = 1;
  string nextPageToken = 2;
}

message ScannerInfo {
  string address = 1;
}

message AgentInfo {
  string image = 1;
  string imageHash = 2;
  string id = 3;
  bool isTest = 4;
  string manifest = 5;
}

message Signature {
  string signature = 1;
  string algorithm = 2;
  string signer = 3;
}

enum AlertType {
  UNKNOWN_ALERT_TYPE = 0;
  TRANSACTION = 1;
  BLOCK = 2;
  PRIVATE = 3;
}

message Alert {
  string id = 1;
  AlertType type = 2;
  Finding finding = 3;
  string timestamp = 4;
  map<string, string> metadata = 5;
  AgentInfo agent = 6;
  map<string, string> tags = 7;
  ScannerInfo scanner = 8;
  TrackingTimestamps timestamps = 9;
}

message SignedAlert {
  Alert alert = 1;
  Signature signature = 2;
  string chainId = 3;
  string blockNumber = 4;
  string publishedWithTx = 5;
}

message NotifyRequest {
  SignedAlert signedAlert = 1;
  EvaluateTxRequest evalTxRequest = 2;
  EvaluateTxResponse evalTxResponse = 3;
  EvaluateBlockRequest evalBlockRequest = 4;
  EvaluateBlockResponse evalBlockResponse = 5;
  AgentInfo agentInfo = 6;
  TrackingTimestamps timestamps = 7;
}

message NotifyResponse {}
